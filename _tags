true: predicate(custom_ppx)
<src/*>: linkall
<as_ppx/ppx.{byte,native}>: predicate(ppx_driver)
# OASIS_START
# DO NOT EDIT (digest: 49c362124237ba61ae0d8784d7fb2a7d)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library ppx_hardcaml
"src/ppx_hardcaml.cmxs": use_ppx_hardcaml
<src/*.ml{,i,y}>: package(compiler-libs.common)
<src/*.ml{,i,y}>: package(ppx_core)
<src/*.ml{,i,y}>: package(ppx_driver)
<src/*.ml{,i,y}>: package(ppx_tools)
<src/*.ml{,i,y}>: package(ppx_tools.metaquot)
# Executable ppx
<as_ppx/ppx.{native,byte}>: package(compiler-libs.common)
<as_ppx/ppx.{native,byte}>: package(ppx_core)
<as_ppx/ppx.{native,byte}>: package(ppx_driver)
<as_ppx/ppx.{native,byte}>: package(ppx_tools)
<as_ppx/ppx.{native,byte}>: package(ppx_tools.metaquot)
<as_ppx/ppx.{native,byte}>: use_ppx_hardcaml
<as_ppx/*.ml{,i,y}>: package(compiler-libs.common)
<as_ppx/*.ml{,i,y}>: package(ppx_core)
<as_ppx/*.ml{,i,y}>: package(ppx_driver)
<as_ppx/*.ml{,i,y}>: package(ppx_tools)
<as_ppx/*.ml{,i,y}>: package(ppx_tools.metaquot)
<as_ppx/*.ml{,i,y}>: use_ppx_hardcaml
# Executable ppx_hardcaml_test
<tests/PpxHardcamlTest.{native,byte}>: oasis_executable_ppx_hardcaml_test_byte
<tests/*.ml{,i,y}>: oasis_executable_ppx_hardcaml_test_byte
<tests/PpxHardcamlTest.{native,byte}>: oasis_executable_ppx_hardcaml_test_native
<tests/*.ml{,i,y}>: oasis_executable_ppx_hardcaml_test_native
<tests/PpxHardcamlTest.{native,byte}>: package(hardcaml)
<tests/PpxHardcamlTest.{native,byte}>: package(oUnit)
<tests/*.ml{,i,y}>: package(hardcaml)
<tests/*.ml{,i,y}>: package(oUnit)
# OASIS_STOP
